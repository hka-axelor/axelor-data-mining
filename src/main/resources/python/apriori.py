# -*- coding: utf-8 -*-
"""Apriori.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gygovv8oDtPK4OtqKpAdbHDYd6PsJIFX
"""
import sys
import pandas as pd
import numpy as np
from mlxtend.preprocessing import TransactionEncoder

path_to_file = sys.argv[1]
support = float(sys.argv[2])
confidence = float(sys.argv[3])

store_data = pd.read_csv(path_to_file, header = None)

records = []
for i in range(0, store_data.shape[0]):
    records.append([str(store_data.values[i,j]) for j in range(0, store_data.shape[1])])

te = TransactionEncoder()
te_ary = te.fit(records).transform(records)

df = pd.DataFrame(te_ary)

df = pd.DataFrame(te_ary, columns = te.columns_)
df = df.drop('nan', 1)

from mlxtend.frequent_patterns import apriori
freq_itemsets = apriori(df, min_support = support, use_colnames = True)

from mlxtend.frequent_patterns import association_rules
rules = association_rules(freq_itemsets, metric = "confidence", min_threshold=confidence)

rules["antecedents"] = rules["antecedents"].apply(lambda x: ', '.join(list(x))).astype("unicode")
rules["consequents"] = rules["consequents"].apply(lambda x: ', '.join(list(x))).astype("unicode")

for index, row in rules.iterrows():
    print('Rule: ' + row['antecedents'] + ' -> ' + row['consequents'])
    print('Support: ' + str(row['support']))
    print('Confidence: ' + str(row['confidence']))
    print('Lift: ' + str(row['lift']))
    print('=====================================')
    
